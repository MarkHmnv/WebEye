version: "3.9"

services:
  api:
    build:
      context: ./api
    ports:
      - "8000:8000"
    depends_on:
      postgres-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./api:/api
    command: /usr/bin/supervisord
    environment:
      - REDIS_USER=${REDIS_USER}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}


  client:
    build:
      context: ./client
    ports:
      - "3000:3000"
    volumes:
      - ./client:/client
      - node_modules:/client/node_modules
    command: npm run dev

  postgres-db:
    build:
      context: ./postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d postgres"]
      interval: 1s
      timeout: 1s
      retries: 60

  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 1s
      retries: 60

volumes:
  postgres-data:
  redis-data:
  node_modules:
